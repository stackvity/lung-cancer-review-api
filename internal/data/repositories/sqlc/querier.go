// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package postgres

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	// ------------- AnalysisResult Queries -------------
	// CreateAnalysisResult: Inserts a new analysis result record.
	CreateAnalysisResult(ctx context.Context, db DBTX, arg *CreateAnalysisResultParams) (*Analysisresult, error)
	// CreateAnalysisResultExternalResource: Links an analysis result to an external resource.
	CreateAnalysisResultExternalResource(ctx context.Context, db DBTX, arg *CreateAnalysisResultExternalResourceParams) error
	// ------------- AuditLog Queries -------------
	// CreateAuditLog: Inserts a new audit log entry.
	CreateAuditLog(ctx context.Context, db DBTX, arg *CreateAuditLogParams) (*Auditlog, error)
	// ------------- Diagnosis Queries -------------
	// CreateDiagnosis inserts a new diagnosis record.
	CreateDiagnosis(ctx context.Context, db DBTX, arg *CreateDiagnosisParams) (*Diagnosis, error)
	// ------------- ExternalResource Queries -------------
	// These don't interact with patient data directly, so they are less sensitive.
	// CreateExternalResource: Inserts a new external resource.
	CreateExternalResource(ctx context.Context, db DBTX, arg *CreateExternalResourceParams) (*Externalresource, error)
	// CreateFinding inserts a new finding record.
	CreateFinding(ctx context.Context, db DBTX, arg *CreateFindingParams) (*Finding, error)
	// ------------- Image Queries -------------
	// CreateImage creates a new image
	CreateImage(ctx context.Context, db DBTX, arg *CreateImageParams) (*Image, error)
	// ------------- PatientSession (and Link) Queries -------------
	// CreatePatientSession: Creates a new patient session (with associated link).
	CreatePatientSession(ctx context.Context, db DBTX, arg *CreatePatientSessionParams) (*Patientsession, error)
	// ------------- Prompt Queries -------------
	// CreatePrompt: Inserts a new prompt.
	CreatePrompt(ctx context.Context, db DBTX, arg *CreatePromptParams) (*Prompt, error)
	// ------------- Report Queries -------------
	// CreateReport inserts a new report record.
	CreateReport(ctx context.Context, db DBTX, arg *CreateReportParams) (*Report, error)
	// ------------- Stage Queries -------------
	// CreateStaging inserts a new staging record.
	CreateStaging(ctx context.Context, db DBTX, arg *CreateStagingParams) (*Stage, error)
	// ------------- Study Queries -------------
	// CreateStudy creates a new study
	CreateStudy(ctx context.Context, db DBTX, arg *CreateStudyParams) (*Study, error)
	// ------------- TreatmentRecommendation Queries -------------
	// CreateTreatmentRecommendation inserts a new treatment recommendation record.
	CreateTreatmentRecommendation(ctx context.Context, db DBTX, arg *CreateTreatmentRecommendationParams) (*Treatmentrecommendation, error)
	// ------------- UploadedContent Queries -------------
	// CreateUploadedContent: Inserts a new uploaded content record.
	CreateUploadedContent(ctx context.Context, db DBTX, arg *CreateUploadedContentParams) (*Uploadedcontent, error)
	// DeleteAllImagesByPatientID deletes all image records associated with a given patient ID.
	DeleteAllImagesByPatientID(ctx context.Context, db DBTX, patientID pgtype.UUID) error
	// DeleteAllReportsByPatientID deletes all reports for a patient
	DeleteAllReportsByPatientID(ctx context.Context, db DBTX, patientID pgtype.UUID) error
	// DeleteAllStudiesByPatientID deletes all studies for a patient
	DeleteAllStudiesByPatientID(ctx context.Context, db DBTX, patientID pgtype.UUID) error
	// DeleteAnalysisResult: Deletes an analysis result by its ID.
	DeleteAnalysisResult(ctx context.Context, db DBTX, resultID pgtype.UUID) error
	// DeleteAnalysisResultBySessionID: Deletes the analysis result for a session.
	DeleteAnalysisResultBySessionID(ctx context.Context, db DBTX, sessionID pgtype.UUID) error
	// DeleteAnalysisResultExternalResource: Removes a link between an analysis result and an external resource.
	DeleteAnalysisResultExternalResource(ctx context.Context, db DBTX, arg *DeleteAnalysisResultExternalResourceParams) error
	// DeleteExpiredSessions: Deletes expired patient sessions.
	DeleteExpiredSessions(ctx context.Context, db DBTX) error
	// DeleteExternalResource: Deletes an external resource by its ID.
	DeleteExternalResource(ctx context.Context, db DBTX, resourceID int32) error
	// DeleteImage deletes a image by ID
	DeleteImage(ctx context.Context, db DBTX, id pgtype.UUID) error
	// DeletePatientSession: Deletes a patient session by session ID.
	DeletePatientSession(ctx context.Context, db DBTX, sessionID pgtype.UUID) error
	// DeletePrompt: Deletes a prompt by its ID.
	DeletePrompt(ctx context.Context, db DBTX, promptID pgtype.UUID) error
	// DeleteReport deletes a report by ID
	DeleteReport(ctx context.Context, db DBTX, id pgtype.UUID) error
	// DeleteStudy deletes a study by ID
	DeleteStudy(ctx context.Context, db DBTX, id pgtype.UUID) error
	// DeleteUploadedContent: Deletes uploaded content by its ID.
	DeleteUploadedContent(ctx context.Context, db DBTX, contentID pgtype.UUID) error
	// DeleteUploadedContentBySessionID: Deletes all uploaded content for a session.
	DeleteUploadedContentBySessionID(ctx context.Context, db DBTX, sessionID pgtype.UUID) error
	// GetActivePrompt: Retrieves the currently active prompt by description.
	GetActivePrompt(ctx context.Context, db DBTX, description pgtype.Text) (*Prompt, error)
	// GetAnalysisResultByID: Retrieves an analysis result by its ID.
	GetAnalysisResultByID(ctx context.Context, db DBTX, resultID pgtype.UUID) (*Analysisresult, error)
	// GetAnalysisResultBySessionID: Retrieves the analysis result for a given session.
	GetAnalysisResultBySessionID(ctx context.Context, db DBTX, sessionID pgtype.UUID) (*Analysisresult, error)
	// GetAuditLogByID: Retrieves an audit log entry by its ID.
	GetAuditLogByID(ctx context.Context, db DBTX, logID int64) (*Auditlog, error)
	// GetDiagnosisByID retrieves a diagnosis by its ID.
	GetDiagnosisByID(ctx context.Context, db DBTX, id pgtype.UUID) (*Diagnosis, error)
	// GetExternalResourceByID: Retrieves an external resource by its ID.
	GetExternalResourceByID(ctx context.Context, db DBTX, resourceID int32) (*Externalresource, error)
	// GetImageByID retrieves a image by its ID
	GetImageByID(ctx context.Context, db DBTX, id pgtype.UUID) (*Image, error)
	// GetImageByStudyID retrieves all images for a study
	GetImageByStudyID(ctx context.Context, db DBTX, studyID pgtype.UUID) ([]*Image, error)
	// GetNoduleByID retrieves a nodule by its ID.
	GetNoduleByID(ctx context.Context, db DBTX, findingID pgtype.UUID) (*GetNoduleByIDRow, error)
	// GetPatientSessionByLink: Retrieves a patient session by its access link.
	GetPatientSessionByLink(ctx context.Context, db DBTX, accessLink string) (*Patientsession, error)
	// GetPromptByID: Retrieves a prompt by its ID.
	GetPromptByID(ctx context.Context, db DBTX, promptID pgtype.UUID) (*Prompt, error)
	// GetReportByID retrieves a report by its ID.
	GetReportByID(ctx context.Context, db DBTX, id pgtype.UUID) (*Report, error)
	// GetReportByPatientID retrieves all reports for a patient
	GetReportByPatientID(ctx context.Context, db DBTX, patientID pgtype.UUID) ([]*Report, error)
	// GetStageByID retrieves a staging record by its ID.
	GetStageByID(ctx context.Context, db DBTX, id pgtype.UUID) (*Stage, error)
	// GetStudyByID retrieves a study by its ID
	GetStudyByID(ctx context.Context, db DBTX, id pgtype.UUID) (*Study, error)
	// GetTreatmentRecommendationByID retrieves a treatment recommendation record by its ID.
	GetTreatmentRecommendationByID(ctx context.Context, db DBTX, id pgtype.UUID) (*Treatmentrecommendation, error)
	// GetUploadedContentByID: Retrieves uploaded content by its ID.
	GetUploadedContentByID(ctx context.Context, db DBTX, contentID pgtype.UUID) (*Uploadedcontent, error)
	// InvalidateLink: Sets a link to used (effectively invalidating it).
	InvalidateLink(ctx context.Context, db DBTX, accessLink string) error
	// ListAuditLogsByAction: Retrieves all audit log entries for a specific action.
	ListAuditLogsByAction(ctx context.Context, db DBTX, action string) ([]*Auditlog, error)
	// ListAuditLogsByContentID: Retrieves all audit log entries for a given content item.
	ListAuditLogsByContentID(ctx context.Context, db DBTX, contentID pgtype.UUID) ([]*Auditlog, error)
	// ListAuditLogsByResultID: Retrieves audit logs for a given analysis result
	ListAuditLogsByResultID(ctx context.Context, db DBTX, resultID pgtype.UUID) ([]*Auditlog, error)
	// ListAuditLogsBySessionID: Retrieves all audit log entries for a given session.
	ListAuditLogsBySessionID(ctx context.Context, db DBTX, sessionID pgtype.UUID) ([]*Auditlog, error)
	// ListExternalResources: Retrieves all external resources.
	ListExternalResources(ctx context.Context, db DBTX) ([]*Externalresource, error)
	// ListExternalResourcesByResultID: Get all external resources associated with a given analysis result.
	ListExternalResourcesByResultID(ctx context.Context, db DBTX, resultID pgtype.UUID) ([]*Externalresource, error)
	// ListImagesByPatientID retrieves all images for a patient
	ListImagesByPatientID(ctx context.Context, db DBTX, patientID pgtype.UUID) ([]*Image, error)
	// ListPrompts: Retrieves all prompts.
	ListPrompts(ctx context.Context, db DBTX) ([]*Prompt, error)
	// ListStudiesByPatientID retrieves all studies for a patient
	ListStudiesByPatientID(ctx context.Context, db DBTX, patientID pgtype.UUID) ([]*Study, error)
	// ListUploadedContentBySessionID: Retrieves all uploaded content for a given session.
	ListUploadedContentBySessionID(ctx context.Context, db DBTX, sessionID pgtype.UUID) ([]*Uploadedcontent, error)
	// UpdateExternalResource: Updates an existing external resource.
	UpdateExternalResource(ctx context.Context, db DBTX, arg *UpdateExternalResourceParams) (*Externalresource, error)
	// UpdatePatientSessionUsed: Marks a patient session as used.
	UpdatePatientSessionUsed(ctx context.Context, db DBTX, sessionID pgtype.UUID) error
	// UpdatePrompt: Updates an existing prompt.
	UpdatePrompt(ctx context.Context, db DBTX, arg *UpdatePromptParams) (*Prompt, error)
}

var _ Querier = (*Queries)(nil)
